---
- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: Install Docker packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: present
    update_cache: yes

- name: Start and enable Docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: Add user to docker group
  user:
    name: "{{ docker_user | default('ubuntu') }}"
    groups: docker
    append: yes

- name: Create Docker network
  docker_network:
    name: "{{ docker_network_name | default('web-network') }}"
    state: present

- name: Pull Docker image
  docker_image:
    name: "{{ docker_image | default('louislam/uptime-kuma:latest') }}"
    source: pull
    force_source: yes

- name: Stop and remove existing container if exists
  docker_container:
    name: "{{ docker_container_name | default('uptime-kuma') }}"
    state: absent
    force_kill: yes

- name: Start Docker container with ephemeral storage
  docker_container:
    name: "{{ docker_container_name | default('uptime-kuma') }}"
    image: "{{ docker_image | default('louislam/uptime-kuma:latest') }}"
    state: started
    restart_policy: "{{ docker_restart_policy | default('unless-stopped') }}"
    ports:
      - "{{ docker_host_port | default('3001') }}:{{ docker_container_port | default('3001') }}"
    volumes:
      - "{{ ephemeral_volume_path | default('/tmp/ephemeral-data') }}:{{ docker_volume_path | default('/tmp/ephemeral-data') }}:rw"
    env:
      NGINX_HOST: localhost
      NGINX_PORT: "{{ docker_container_port | default('3001') }}"
    networks:
      - name: "{{ docker_network_name | default('web-network') }}"
    labels:
      managed_by: ansible
      created_at: "{{ ansible_date_time.iso8601 }}"

- name: Wait for container to be ready
  wait_for:
    port: "{{ docker_host_port | default('3001') }}"
    delay: 10
    timeout: 60 